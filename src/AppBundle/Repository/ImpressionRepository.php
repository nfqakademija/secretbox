<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Impression;
use AppBundle\Entity\User;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;

/**
 * ImpressionRepository
 *
 * This class was generated by the Doctrine ORM. Add your    own custom
 * repository methods below.
 */
class ImpressionRepository extends EntityRepository
{
    /**
     * @param Impression $impression
     */
    public function saveImpression(Impression $impression)
    {
        $this->_em->persist($impression);
        $this->_em->flush();
    }

    /**
     * @param $userId
     *
     * @return Impression[]
     */
    public function getImpressions($userId)
    {
        $impressions = $this->findBy(['userId' => $userId], ['created' => 'DESC']);

        return $impressions;
    }

    /**
     * @param integer $limit
     *
     * @return Impression[]
     */
    public function getLastImpressions($limit)
    {


//
//        $queryBuilder = $this->_em->createQueryBuilder();
//        $queryBuilder
//            ->select('i')
//            ->from(Impression::class, 'i')
        ////            ->innerJoin(
        ////                User::class,
        ////                'u',
        ////                \Doctrine\ORM\Query\Expr\Join::WITH,
        ////                'i.user = u.id'
        ////            )
//            ->where('i.isApproved = :isApproved')
//            ->orderBy('i.createdAt', 'DESC')
//            ->setParameter('isApproved', true)
//            ->setMaxResults($limit);
//        $impressions = $queryBuilder->getQuery()->execute();



        $rsm = new ResultSetMapping();
        $query = $this->_em->createQuery(
            "SELECT i.id, i.impression, u.firstName, u.lastName, u.pictureUrl FROM AppBundle:Impression AS i
                  LEFT JOIN AppBundle:User AS u
                  WITH i.user = u.id
                  WHERE i.isApproved = :isApproved
                  ORDER BY i.createdAt DESC",
            $rsm
        );
        $query
            ->setParameter('isApproved', true)
            ->setMaxResults($limit);
        $impressions = $query->getResult();


//        $impressions = $this->findBy(['id' => 1701]);
        return $impressions;
    }
}
